name: FeOS Test

on: [push]

jobs:
  build:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Protobuf Compiler
        run: sudo apt-get update && sudo apt-get install protobuf-compiler -y

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build build-container
        run: make build-container

      - name: Set up kernel cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            target/kernel/
          key: ${{ runner.os }}-kernel-${{ hashFiles('/hack/kernel/**') }}
          restore-keys: ${{ runner.os }}-kernel-

      - name: Build Kernel
        run: make kernel

      - name: Build initramfs
        run: make initramfs

      - name: Build UKI
        run: |
          CMDLINE="console=tty0 console=ttyS0,115200 earlyprintk=ttyS0,115200 consoleblank=0"
          echo "CMDLINE=CMDLINE" >> $GITHUB_ENV
          echo $CMDLINE >> target/cmdline
          mkdir keys
          echo "${{ secrets.SECUREBOOT_PRIVATEKEY }}" > keys/secureboot.key
          echo "${{ secrets.SECUREBOOT_CERTIFICATE }}" > keys/secureboot.pem
          openssl x509 -in keys/secureboot.pem -out keys/feos.crt -outform DER
          make uki

      - name: Run Tests
        run: make test-ci
