name: FeOS Nginx Container

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

jobs:
  build_nginx_container:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ghcr.io/ironcore-dev/feos/feos-nginx
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Install Protobuf Compiler
      run: sudo apt-get update && sudo apt-get install protobuf-compiler -y

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up cargo cache
      uses: actions/cache@v4
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Run Tests
      run: make test

    - name: Build build-container
      run: make build-container

    - name: Set up kernel cache
      uses: actions/cache@v4
      continue-on-error: false
      with:
        path: |
          target/kernel/
        key: ${{ runner.os }}-kernel-${{ hashFiles('hack/kernel/**') }}
        restore-keys: ${{ runner.os }}-kernel-

    - name: Build Kernel
      run: make kernel

    - name: Build initramfs
      run: make initramfs

    - name: Build UKI with secrets
      run: |
        CMDLINE="console=tty0 console=ttyS0,115200 intel_iommu=on iommu=pt"
        echo $CMDLINE > target/cmdline
        mkdir -p keys
        echo "${{ secrets.SECUREBOOT_PRIVATEKEY }}" > keys/secureboot.key
        echo "${{ secrets.SECUREBOOT_CERTIFICATE }}" > keys/secureboot.pem
        openssl x509 -in keys/secureboot.pem -out keys/feos.crt -outform DER
        make uki

    - name: Build and push multiarch nginx container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: hack/Dockerfile.nginx
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

