syntax = "proto3";

package feos.host.v1;

// HostService provides information about the host system.
service HostService {
  // Retrieves the hostname of the machine running the service.
  rpc Hostname(HostnameRequest) returns (HostnameResponse);
  rpc GetMemory(MemoryRequest) returns (MemoryResponse);
  rpc GetCPUInfo(GetCPUInfoRequest) returns (GetCPUInfoResponse);
  // Retrieves statistics for all network interfaces.
  rpc GetNetworkInfo(GetNetworkInfoRequest) returns (GetNetworkInfoResponse);
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
  rpc Reboot(RebootRequest) returns (RebootResponse);

  // Upgrades the running FeOS binary. This is a client-streaming RPC.
  // The first message MUST contain the UpgradeMetadata, and subsequent messages
  // MUST contain the binary data chunks.
  rpc UpgradeFeosBinary(stream UpgradeRequest) returns (UpgradeResponse);

  // Streams kernel log messages from /dev/kmsg.
  rpc StreamKernelLogs(StreamKernelLogsRequest) returns (stream KernelLogEntry);
}

message HostnameRequest {}

message HostnameResponse {
  string hostname = 1;
}

message UpgradeRequest {
  oneof payload {
    UpgradeMetadata metadata = 1;
    bytes chunk = 2;
  }
}

message UpgradeMetadata {
  // The SHA256 checksum of the binary file, hex-encoded.
  string sha256_sum = 1;
}

message UpgradeResponse {
  // A message indicating the result of the upgrade attempt.
  string message = 1;
}

message StreamKernelLogsRequest {}

message KernelLogEntry {
  // A single raw log line from the kernel log buffer.
  string message = 1;
}

message ShutdownRequest {}

message ShutdownResponse {}

message RebootRequest {}

message RebootResponse {}

message MemoryRequest {}

message MemoryResponse {
  MemInfo mem_info = 1;
}

message MemInfo {
  uint64 memtotal = 1;
  uint64 memfree = 2;
  uint64 memavailable = 3;
  uint64 buffers = 4;
  uint64 cached = 5;
  uint64 swapcached = 6;
  uint64 active = 7;
  uint64 inactive = 8;
  uint64 activeanon = 9;
  uint64 inactiveanon = 10;
  uint64 activefile = 11;
  uint64 inactivefile = 12;
  uint64 unevictable = 13;
  uint64 mlocked = 14;
  uint64 swaptotal = 15;
  uint64 swapfree = 16;
  uint64 dirty = 17;
  uint64 writeback = 18;
  uint64 anonpages = 19;
  uint64 mapped = 20;
  uint64 shmem = 21;
  uint64 slab = 22;
  uint64 sreclaimable = 23;
  uint64 sunreclaim = 24;
  uint64 kernelstack = 25;
  uint64 pagetables = 26;
  uint64 nfsunstable = 27;
  uint64 bounce = 28;
  uint64 writebacktmp = 29;
  uint64 commitlimit = 30;
  uint64 committedas = 31;
  uint64 vmalloctotal = 32;
  uint64 vmallocused = 33;
  uint64 vmallocchunk = 34;
  uint64 hardwarecorrupted = 35;
  uint64 anonhugepages = 36;
  uint64 shmemhugepages = 37;
  uint64 shmempmdmapped = 38;
  uint64 cmatotal = 39;
  uint64 cmafree = 40;
  uint64 hugepagestotal = 41;
  uint64 hugepagesfree = 42;
  uint64 hugepagesrsvd = 43;
  uint64 hugepagessurp = 44;
  uint64 hugepagesize = 45;
  uint64 directmap4k = 46;
  uint64 directmap2m = 47;
  uint64 directmap1g = 48;
}

message GetCPUInfoRequest {}

message GetCPUInfoResponse {
  repeated CPUInfo cpu_info = 1;
}

message CPUInfo {
  uint32 processor = 1;
  string vendor_id = 2;
  string cpu_family = 3;
  string model = 4;
  string model_name = 5;
  string stepping = 6;
  string microcode = 7;
  double cpu_mhz = 8;
  string cache_size = 9;
  string physical_id = 10;
  uint32 siblings = 11;
  string core_id = 12;
  uint32 cpu_cores = 13;
  string apic_id = 14;
  string initial_apic_id = 15;
  string fpu = 16;
  string fpu_exception = 17;
  uint32 cpu_id_level = 18;
  string wp = 19;
  repeated string flags = 20;
  repeated string bugs = 21;
  double bogo_mips = 22;
  uint32 cl_flush_size = 23;
  uint32 cache_alignment = 24;
  string address_sizes = 25;
  string power_management = 26;
}

message GetNetworkInfoRequest {}

message GetNetworkInfoResponse {
  repeated NetDev devices = 1;
}

message NetDev {
  string name = 1;
  uint64 rx_bytes = 2;
  uint64 rx_packets = 3;
  uint64 rx_errors = 4;
  uint64 rx_dropped = 5;
  uint64 rx_fifo = 6;
  uint64 rx_frame = 7;
  uint64 rx_compressed = 8;
  uint64 rx_multicast = 9;
  uint64 tx_bytes = 10;
  uint64 tx_packets = 11;
  uint64 tx_errors = 12;
  uint64 tx_dropped = 13;
  uint64 tx_fifo = 14;
  uint64 tx_collisions = 15;
  uint64 tx_carrier = 16;
  uint64 tx_compressed = 17;
}